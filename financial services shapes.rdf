@prefix :  <https://w3id.org/ontology/uslcpwa#> .
@prefix rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix sh:  <http://www.w3.org/ns/shacl#> .
@prefix xml:  <http://www.w3.org/XML/1998/namespace> .
@prefix xsd:  <http://www.w3.org/2001/XMLSchema#> .
@prefix rdfs:  <http://www.w3.org/2000/01/rdf-schema#> .

:PrefixesEmbeddedSHsparql sh:declare 
	[sh:prefix"rdf";sh:namespace"http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI],
	[sh:prefix"rdfs";sh:namespace"http://www.w3.org/2000/01/rdf-schema#"^^xsd:anyURI],
	[sh:prefix"xsd";sh:namespace"http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI],
	[sh:prefix"";sh:namespace"https://w3id.org/ontology/uslcpwa#"^^xsd:anyURI].
	


#The next shape checks the values in all fields of FinancialServicesSubPlan
:CheckFinancialInstitutionName rdf:type sh:NodeShape;
sh:targetSubjectsOf :has-name-of-financial-institution ;
sh:property[
sh:pattern "^(?!\\s*$).+";
sh:path :has-name-of-financial-institution;
sh:message "has-name-of-financial-institution: name of financial institution must not be empty"
].

:CheckAccountNumber rdf:type sh:NodeShape;
sh:targetSubjectsOf :has-account-number ;
sh:property[
sh:pattern "^(?!\\s*$).+";
sh:path :has-account-number;
sh:datatype xsd:integer;
sh:message "has-account-number: account number must be an integer value"
].

:CheckFinancialInstitutionBranch rdf:type sh:NodeShape;
sh:targetSubjectsOf :has-financial-institution-branch ;
sh:property[
sh:pattern "^(?!\\s*$).+";
sh:path :has-financial-institution-branch;
sh:message "has-financial-institution-branch: branch of financial institution must not be empty"
].

:CheckFinancialInstitutionDateOfEngagement rdf:type sh:NodeShape;
sh:targetSubjectsOf :has-financial-institution-date-of-engagement;
sh:property[
  sh:pattern "^(?!\\s*$).+";
  sh:path :has-financial-institution-date-of-engagement;
  sh:message "has-financial-institution-date-of-engagement: Engagement date must not be empty"
];
sh:sparql[
  sh:prefixes :PrefixesEmbeddedSHsparql;
  sh:select """
    SELECT $this ?formattedDate
    WHERE {
	  $this :has-financial-institution-date-of-engagement ?di
	  FILTER(datatype(?di) = xsd:dateTime)
      BIND(NOW() AS ?dateTime)
	  BIND(STRDT(SUBSTR(STR(?di), 1, 10), xsd:date) AS ?date)
	  BIND(STR(?date) AS ?dateStr)
	  BIND(SUBSTR(?dateStr, 6, 2) AS ?month)
	  BIND(SUBSTR(?dateStr, 9, 2) AS ?day)
	  BIND(SUBSTR(?dateStr, 1, 4) AS ?year)
	  BIND(CONCAT(?day, "/", ?month, "/", ?year) AS ?formattedDate)
	  FILTER(?dateTime<?di).
    }
  """;
  sh:message "has-financial-institution-date-of-engagement: The specified date ({?formattedDate}) is in the future. Please enter a date that is today or earlier in the format dd/mm/yyyy"
];
sh:sparql[
  sh:prefixes :PrefixesEmbeddedSHsparql;
  sh:select """
    SELECT $this ?formattedDate
    WHERE {
	  $this :has-financial-institution-date-of-engagement ?di
      FILTER(datatype(?di) = xsd:dateTime)
      BIND(STRDT("1960-01-01T00:00:00Z", xsd:dateTime) AS ?minDate)
      BIND(STRDT(SUBSTR(STR(?di), 1, 10), xsd:date) AS ?date)
      BIND(STR(?date) AS ?dateStr)
      BIND(SUBSTR(?dateStr, 6, 2) AS ?month)
      BIND(SUBSTR(?dateStr, 9, 2) AS ?day)
      BIND(SUBSTR(?dateStr, 1, 4) AS ?year)
      BIND(CONCAT(?day, "/", ?month, "/", ?year) AS ?formattedDate)
      FILTER(?di < ?minDate)
    }
  """;
  sh:message "has-financial-institution-date-of-engagement: The specified date ({?formattedDate}) is before 01/01/1960. Please enter a date on or after 01/01/1960 in the format dd/mm/yyyy"
].

:CheckFinancialServicesObtainedInPast6Months rdf:type sh:NodeShape;
sh:targetSubjectsOf :has-financial-services-obtained-past-6-months ;
sh:property[
sh:pattern "^(?!\\s*$).+";
sh:path :has-financial-services-obtained-past-6-months;
sh:message "has-financial-services-obtained-past-6-months: financial services obtained in the past six months must not be empty"
].

:CheckFinancialServicesObtainedInNext6Months rdf:type sh:NodeShape;
sh:targetSubjectsOf :has-financial-services-projection-for-next-6-months ;
sh:property[
sh:pattern "^(?!\\s*$).+";
sh:path :has-financial-services-projection-for-next-6-months;
sh:message "has-financial-services-projection-for-next-6-months: financial services projected for the next six months must not be empty"
].

:CheckFinancialExpenditurePast6MonthsUSD rdf:type sh:NodeShape;
sh:targetSubjectsOf :has-financial-expenditure-past-6-months-USD ;
sh:property[
sh:pattern "^(?!\\s*$).+";
sh:path :has-financial-expenditure-past-6-months-USD;
sh:datatype xsd:decimal;
sh:minInclusive 1;
sh:message "has-financial-expenditure-past-6-months-USD: financial expenditure (USD) in the past six months must not be empty and must be higher than zero"
].

:CheckFinancialExpenditurePast6MonthsGHC rdf:type sh:NodeShape;
sh:targetSubjectsOf :has-financial-expenditure-past-6-months-GHC ;
sh:property[
sh:pattern "^(?!\\s*$).+";
sh:path :has-financial-expenditure-past-6-months-GHC;
sh:datatype xsd:decimal;
sh:minInclusive 1;
sh:message "has-financial-expenditure-past-6-months-GHC: financial expenditure (GHC) in the past six months must not be empty and must be higher than zero"
].

:CheckFinancialExpenditureNext6MonthsUSD rdf:type sh:NodeShape;
sh:targetSubjectsOf :has-financial-expenditure-projection-for-next-6-months-USD ;
sh:property[
sh:pattern "^(?!\\s*$).+";
sh:path :has-financial-expenditure-projection-for-next-6-months-USD;
sh:datatype xsd:decimal;
sh:minInclusive 1;
sh:message "has-financial-expenditure-projection-for-next-6-months-USD: financial expenditure (USD) projected for the next six months must not be empty and must be higher than zero"
].

:CheckFinancialExpenditureNext6MonthsGHC rdf:type sh:NodeShape;
sh:targetSubjectsOf :has-financial-expenditure-projection-for-next-6-months-GHC ;
sh:property[
sh:pattern "^(?!\\s*$).+";
sh:path :has-financial-expenditure-projection-for-next-6-months-GHC;
sh:datatype xsd:decimal;
sh:minInclusive 1;
sh:message "has-financial-expenditure-projection-for-next-6-months-GHC: financial expenditure (GHC) projected for the next six months must not be empty and must be higher than zero"
].

:CheckFinancialServiceDescription rdf:type sh:NodeShape;
sh:targetSubjectsOf :has-financial-service-description ;
sh:property[
sh:pattern "^(?!\\s*$).+";
sh:path :has-financial-service-description;
sh:message "has-financial-service-description: description of financial service must not be empty"
].

:CheckFinancialServiceNatureOfWork rdf:type sh:NodeShape;
sh:targetSubjectsOf :has-financial-service-nature-of-work ;
sh:property[
sh:pattern "^(?!\\s*$).+";
sh:path :has-financial-service-nature-of-work;
sh:message "has-financial-service-nature-of-work: nature of work for financial service must not be empty"
].

:CheckFinancialServiceExpenditureUSD rdf:type sh:NodeShape;
sh:targetSubjectsOf :has-financial-service-expenditure-USD ;
sh:property[
sh:path :has-financial-service-expenditure-USD;
sh:datatype xsd:decimal;
sh:minInclusive 1;
sh:message "has-financial-service-expenditure-USD: expenditure (USD) for financial service must be higher than zero"
].

:CheckFinancialServiceExpenditureGHC rdf:type sh:NodeShape;
sh:targetSubjectsOf :has-financial-service-expenditure-GHC ;
sh:property[
sh:path :has-financial-service-expenditure-GHC;
sh:datatype xsd:decimal;
sh:minInclusive 1;
sh:message "has-financial-service-expenditure-GHC: expenditure (GHC) for financial service must be higher than zero"
].